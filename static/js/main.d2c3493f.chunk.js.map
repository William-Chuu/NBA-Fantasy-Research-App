{"version":3,"sources":["components/PlayerItem.js","components/Player.js","components/Injuries.js","components/AddPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerItem","Player","delPlayer","HS","name","salary","stats","console","log","salary_keys","Object","keys","classes","makeStyles","table","minWidth","useStyles","stats_keys","num_stats_keys","length","columns","i","push","field","rows","temp","j","StyledWidget","styled","div","StyledHeader","Fragment","style","fontFamily","fontSize","position","top","left","onClick","bind","this","class","float","cursor","src","alt","transform","TableContainer","component","Paper","resize","overflow","width","Table","className","size","aria-label","TableHead","TableRow","map","TableCell","align","TableBody","height","pageSize","checkboxSelection","Players","Injuries","Injury","Array","isArray","valueDicts","values","numValues","key","objectData","index","boxShadow","display","overflowY","maxHeight","row","AddPlayer","addPlayer","useState","Name","setName","onSubmit","e","preventDefault","rel","href","integrity","crossorigin","type","placeholder","value","onChange","target","App","116","0","setPlayers","setInjury","loading","setLoading","useEffect","Axios","get","then","Response","data","marginTop","marginBottom","flexDirection","alignItems","myParams","alert","post","response","catch","error","filter","margin","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.d2c3493f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport { DataGrid } from '@material-ui/data-grid'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function PlayerItem({Player, delPlayer}) {\r\n    const {HS, name, salary, stats} = Player;\r\n\r\n    console.log(Player);\r\n\r\n    // column names\r\n    const salary_keys = Object.keys(salary);\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n          minWidth: 700,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const stats_keys = Object.keys(stats);\r\n    const num_stats_keys = stats_keys.length;\r\n    console.log(stats_keys);\r\n    console.log(num_stats_keys);\r\n    const columns = [];\r\n\r\n    // salary table\r\n    for (let i = 0; i < num_stats_keys; i++) {\r\n        columns.push({ field: 'id', field: stats_keys[i], headerName: stats_keys[i], width: 100, fontSize: '10px'});\r\n    }\r\n\r\n    // number of rows\r\n    // console.log(Object.keys(stats[stats_keys[0]]).length);\r\n    // player stats\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < Object.keys(stats[stats_keys[0]]).length; i++) {\r\n        const temp = {};\r\n        temp['id'] = i;\r\n        // number of columns\r\n        for (let j = 0; j < num_stats_keys; j++) {\r\n            // loop through each stat, getting the ith (or row th) stat\r\n            temp[stats_keys[j]] = stats[stats_keys[j]][i];\r\n        }\r\n        rows.push(temp);\r\n    }\r\n\r\n\r\n    const StyledWidget = styled.div `\r\n    position: relative;\r\n    background: white;\r\n    margin-left: 250px;\r\n    margin-right: 250px;\r\n    margin-bottom: 5%;\r\n    border-radius: 25px;\r\n    border: 0px;\r\n    padding: 1%;\r\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 1)\r\n    `;\r\n\r\n    const StyledHeader = styled.div `\r\n    position: relative;\r\n    margin-bottom: 0%;\r\n    `;\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <StyledWidget>\r\n            <StyledHeader>\r\n                <p>\r\n                    <h1 style={{fontFamily:'Trebuchet MS',fontSize:'40px', position:'absolute', top:'-18%', left:'43%'}}>{name}</h1>\r\n                    <i onClick = { delPlayer.bind(this,name) } class=\"fas fa-trash-alt\" style = {{float:'right', fontSize:'1.5em', cursor:'pointer'}}></i>\r\n                </p>\r\n    \r\n                <img src={HS} alt={name} style={{position:'relative', left:'1%', top:'-3%', transform:'translate(0%,-10%)'}}></img>\r\n            \r\n                <TableContainer component={Paper} style={{position:'absolute', top:'50%', left:'12%', resize:'both', overflow:'auto', width:'88%'}}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        {\r\n                            salary_keys.map((keys) => (\r\n                                <TableCell key={keys} align=\"left\"> {keys} </TableCell>\r\n                            ))\r\n                        }\r\n                    </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                    {salary_keys.map((keys) => (\r\n                        <TableCell key={keys} align=\"left\">{ salary[keys][Object.keys(salary[keys])[0]] }</TableCell>                    \r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            </StyledHeader>\r\n\r\n            <div style={{ height: 250, width: '100%'}}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n        </StyledWidget>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nconst btnStyle = {\r\n    // red\r\n    background: '#ff0000',\r\n    // white\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PlayerItem from './PlayerItem'\r\n\r\nexport default function Player({Players, delPlayer}) {\r\n    console.log(Players);\r\n  return (\r\n    // for each loop kinda, for each todo we map through what we want to display (loop through todos)\r\n    // maps creates a list(dict) which needs a key for each value \r\n    <div>\r\n    {Players.map((Player) => (\r\n        <PlayerItem key={Player['name']} Player={Player} delPlayer={delPlayer}/>\r\n        ))\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n// //array of objects\r\n// Todos.propTypes = {\r\n//   todos: PropTypes.array.isRequired,\r\n//   markComplete: PropTypes.func.isRequired,\r\n//   delTodo:  PropTypes.func.isRequired\r\n// }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\nexport default function Injuries({Injury}) {\r\n    const classes = useStyles();\r\n\r\n    if (!Injury || (Array.isArray(Injury) && Injury.length == 0)) {\r\n      return <div></div>;\r\n    }\r\n    \r\n    // console.log(Injury);\r\n    const rows = [];\r\n    // Array of values\r\n    const valueDicts = Object.values(Injury);\r\n    const numValues = Object.keys(valueDicts[0]).length;\r\n    // console.log(valueDicts);\r\n    // console.log(numValues);\r\n    \r\n    for (let i = 0; i < numValues; i++) {\r\n      rows.push([]);\r\n    }\r\n    \r\n    Object.keys(Injury).map(key => {\r\n      // name, object\r\n      // console.log(key, Injury[key]);\r\n      let objectData = Injury[key]\r\n      // index = 0-11\r\n      Object.keys(objectData).map(index => {\r\n        rows[index].push(objectData[index]);\r\n      });\r\n    });\r\n    // console.log(rows);\r\n    // console.log(Injury);\r\n    // console.log(Object.keys(Injury));\r\n    // console.log(Object.keys(Injury)[0]);\r\n    // console.log(Injury[Object.keys(Injury)[0]]);\r\n    //console.log(Object.keys(Injury[Object.keys(Injury)[0]]));\r\n    return (\r\n        <TableContainer component={Paper} style={{boxShadow: '0 -2px 10px rgba(0, 0, 0, 1)', display: 'inline-block', overflowY:'scroll', maxHeight:'600px'}}>\r\n          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                { Object.keys(Injury).map((key) => (\r\n                <TableCell key={key} align=\"left\">{ key }</TableCell>\r\n                ))\r\n                }\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row[3]}>\r\n              {row.map((i) => (\r\n                <TableCell key={i} align=\"left\">{i}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n}\r\n\r\n//array of objects\r\n// Injuries.propTypes = {\r\n//   todos: PropTypes.array.isRequired,\r\n//   markComplete: PropTypes.func.isRequired,\r\n//   delTodo:  PropTypes.func.isRequired\r\n// }\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './AddPlayer.css'\r\n\r\nexport default function AddPlayer({addPlayer}) {\r\n    // want new todo to be a new state\r\n    // COMPONENT level state vs app level\r\n    const [Name, setName] = useState('')\r\n    \r\n    // event parameter\r\n    // if have multiple inputs [e.target.name] and name should = state name\r\n    function onChange(e) {\r\n        // state will change dynamicaly to what is in input field\r\n        setName(e.target.value)\r\n    }\r\n    \r\n    function onSubmit(e) {\r\n        // to prevent from submitting to actual file\r\n        e.preventDefault();\r\n        addPlayer(Name);\r\n        // clear field after submitting\r\n        setName('')\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\" integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\"></link>\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                type='text' \r\n                name='Name' \r\n                placeholder='Player Name ...'\r\n                // = the state\r\n                value={Name}\r\n                // when enter text\r\n                onChange={onChange}\r\n            />\r\n            <i className=\"fa fa-search\"\r\n                type='submit'\r\n                value='Submit'\r\n                onClick={onSubmit}\r\n            >\r\n            </i>\r\n        </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// // Proptypes\r\n// AddTodo.propTypes = {\r\n//     addTodo: PropTypes.func.isRequired\r\n// }\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\nimport Player from './components/Player'\nimport Injuries from './components/Injuries'\nimport AddPlayer from './components/AddPlayer'\nimport Axios from 'axios'\nimport './App.css'\nimport styled from 'styled-components'\nimport ReactDOM from \"react-dom\";\nimport { Ring } from \"react-awesome-spinners\";\n\n\n const StyledDiv = styled.div\n\nfunction App() {\n  const [Players, setPlayers] = useState([{'name': 'Zion Williamson', 'HS': 'https://d2cwpp38twqe55.cloudfront.net/req/202006192/images/players/willizi01.jpg', 'salary': {'Player': {116: 'Zion Williamson'}, 'Tm': {116: 'NOP'}, '2020-21': {116: '$10,245,480'}, '2021-22': {116: '$10,733,400'}, '2022-23': {116: '$13,534,817'}, '2023-24': {116: ''}, '2024-25': {116: ''}, '2025-26': {116: ''}, 'Signed Using': {116: '1st Round Pick'}, 'Guaranteed': {116: '$20,002,920'}}, 'stats': {'SEASON': {0: '2019-20'}, 'AGE': {0: 19.0}, 'TEAM': {0: 'NOP'}, 'LEAGUE': {0: 'NBA'}, 'POS': {0: 'PF'}, 'G': {0: 24}, 'GS': {0: 24}, 'MP': {0: 27.8}, 'FG': {0: 8.8}, 'FGA': {0: 15.0}, 'FG%': {0: 0.58}, '3P': {0: 0.3}, '3PA': {0: 0.6}, '3P%': {0: 0.43}, '2P': {0: 8.5}, '2PA': {0: 14.4}, '2P%': {0: 0.59}, 'eFG%': {0: 0.59}, 'FT': {0: 4.8}, 'FTA': {0: 7.4}, 'FT%': {0: 0.64}, 'ORB': {0: 2.7}, 'DRB': {0: 3.6}, 'TRB': {0: 6.3}, 'AST': {0: 2.1}, 'STL': {0: 0.7}, 'BLK': {0: 0.4}, 'TOV': {0: 2.5}, 'PF': {0: 1.8}, 'PTS': {0: 22.5}}}])\n  const [Injury, setInjury] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  // useEffect(() => {\n  //   Axios.get('/player')\n  //   .then(Response => (setPlayers([...Players, Response.data])))\n  // }, [setPlayers]);\n\n  // console.log(Players)\n\n  useEffect(() => {\n    Axios.get('https://nba-fantasy-app.herokuapp.com/injuries')\n    .then(Response => (Response.data))\n    .then(data => (setInjury(data)))\n  }, [setInjury]);\n\n  // console.log(Injury)\n\n  // return todos that DO NOT match the id \n  function delPlayer(Name) {\n    // .filter() returns another array, never good to mutate state\n    // for each player object in Players, checks if name DOES NOT equal passed Name. If true, adds to new array. (gets rid of objects that have the same name)\n      setPlayers(Players.filter(Player => Player['name'] !== Name))\n      // console.log(Players)\n  }\n\n  // *** need to pass as JSON file\n  function addPlayer(Name) {\n    var myParams = {\n      data: Name\n    }\n    if (Name == \"\") {\n      alert(\"The search query cannot be empty\")\n    }\n    else {\n      setLoading(true);\n      Axios.post('https://nba-fantasy-app.herokuapp.com/player', myParams)\n      .then(function(response){\n        console.log(response.data);\n        // if get 204 error back (no content)\n        if (response.data == '') {\n          alert(\"Please enter a valid player name\")\n          setLoading(false);\n          return;\n        }\n        setLoading(false);\n        // add response to end of what we already have in state\n        setPlayers([...Players, response.data]);\n      })\n      .catch(function(error){\n        setLoading(false);\n        console.log(error);\n      })\n    }\n  }\n  \n  return (\n    <div>\n      <React.Fragment>\n        <div style={{marginTop: '5%', marginBottom: '2%', position:'relative', display:'flex', flexDirection:'column', alignItems:'center'}}>\n          <AddPlayer addPlayer={addPlayer}/>\n          {loading && <Ring></Ring>}\n        </div>\n        <div>\n          <Player Players={Players} delPlayer={delPlayer}/>\n        </div>\n        <div style={{margin: '10%'}}>\n          <Injuries Injury={Injury}/>\n        </div>\n        </React.Fragment>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}