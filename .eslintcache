[{"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\App.js":"1","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\Injuries.js":"3","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\Player.js":"4","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\PlayerItem.js":"5","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\index.js":"6","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\AddPlayer.js":"7"},{"size":3184,"mtime":1609137347743,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2677,"mtime":1609137139140,"results":"11","hashOfConfig":"9"},{"size":719,"mtime":1608703263959,"results":"12","hashOfConfig":"9"},{"size":4414,"mtime":1609136028523,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"9"},{"size":1624,"mtime":1609123683694,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ae327g",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\App.js",["32","33","34"],"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\Injuries.js",["35","36","37","38"],"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\Player.js",["39"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PlayerItem from './PlayerItem'\r\n\r\nexport default function Player({Players, delPlayer}) {\r\n    console.log(Players);\r\n  return (\r\n    // for each loop kinda, for each todo we map through what we want to display (loop through todos)\r\n    // maps creates a list(dict) which needs a key for each value \r\n    <div>\r\n    {Players.map((Player) => (\r\n        <PlayerItem key={Player['name']} Player={Player} delPlayer={delPlayer}/>\r\n        ))\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\n// //array of objects\r\n// Todos.propTypes = {\r\n//   todos: PropTypes.array.isRequired,\r\n//   markComplete: PropTypes.func.isRequired,\r\n//   delTodo:  PropTypes.func.isRequired\r\n// }\r\n","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\PlayerItem.js",["40","41","42","43"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport { DataGrid } from '@material-ui/data-grid'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function PlayerItem({Player, delPlayer}) {\r\n    const {HS, name, salary, stats} = Player;\r\n\r\n    console.log(Player);\r\n\r\n    // column names\r\n    const salary_keys = Object.keys(salary);\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n          minWidth: 700,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const stats_keys = Object.keys(stats);\r\n    const num_stats_keys = stats_keys.length;\r\n    console.log(stats_keys);\r\n    console.log(num_stats_keys);\r\n    const columns = [];\r\n\r\n    // salary table\r\n    for (let i = 0; i < num_stats_keys; i++) {\r\n        columns.push({ field: 'id', field: stats_keys[i], headerName: stats_keys[i], width: 100, fontSize: '10px'});\r\n    }\r\n\r\n    // number of rows\r\n    // console.log(Object.keys(stats[stats_keys[0]]).length);\r\n    // player stats\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < Object.keys(stats[stats_keys[0]]).length; i++) {\r\n        const temp = {};\r\n        temp['id'] = i;\r\n        // number of columns\r\n        for (let j = 0; j < num_stats_keys; j++) {\r\n            // loop through each stat, getting the ith (or row th) stat\r\n            temp[stats_keys[j]] = stats[stats_keys[j]][i];\r\n        }\r\n        rows.push(temp);\r\n    }\r\n\r\n    var instructions = \"\";\r\n    if (Object.keys(Player).length == 0) {\r\n        instructions = \"Search a player's name to see their info!\";\r\n    }\r\n\r\n    const StyledWidget = styled.div `\r\n    position: relative;\r\n    background: white;\r\n    margin-left: 10%; \r\n    margin-right: 10%;\r\n    margin-bottom: 5%;\r\n    border-radius: 25px;\r\n    border: 0px;\r\n    padding: 1%;\r\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 1)\r\n    `;\r\n\r\n    const StyledHeader = styled.div `\r\n    position: relative;\r\n    margin-bottom: 0%;\r\n    `;\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <StyledWidget>\r\n            <h1>\r\n                {instructions}\r\n            </h1>\r\n            <StyledHeader>\r\n                <p>\r\n                    <h1 style={{fontFamily:'Trebuchet MS',fontSize:'40px', position:'absolute', top:'-18%', left:'43%'}}>{name}</h1>\r\n                    <i onClick = { delPlayer.bind(this,name) } class=\"fas fa-trash-alt\" style = {{float:'right', fontSize:'1.5em', cursor:'pointer'}}></i>\r\n                </p>\r\n    \r\n                <img src={HS} alt={name} style={{position:'relative', left:'1%', top:'-3%', transform:'translate(0%,-10%)'}}></img>\r\n            \r\n                <TableContainer component={Paper} style={{position:'absolute', top:'50%', left:'12%', resize:'both', overflow:'auto', width:'88%'}}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        {\r\n                            salary_keys.map((keys) => (\r\n                                <TableCell key={keys} align=\"left\"> {keys} </TableCell>\r\n                            ))\r\n                        }\r\n                    </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                    {salary_keys.map((keys) => (\r\n                        <TableCell key={keys} align=\"left\">{ salary[keys][Object.keys(salary[keys])[0]] }</TableCell>                    \r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            </StyledHeader>\r\n\r\n            <div style={{ height: 250, width: '100%'}}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection/>\r\n            </div>\r\n        </StyledWidget>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nconst btnStyle = {\r\n    // red\r\n    background: '#ff0000',\r\n    // white\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n","C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\index.js",[],"C:\\Users\\willi\\source\\repos\\NBAFantasy\\frontend\\src\\components\\AddPlayer.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":43,"column":14,"nodeType":"51","messageId":"52","endLine":43,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":51,"column":27,"nodeType":"51","messageId":"52","endLine":51,"endColumn":29},{"ruleId":"45","severity":1,"message":"53","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":22,"column":60,"nodeType":"51","messageId":"52","endLine":22,"endColumn":62},{"ruleId":"54","severity":1,"message":"55","line":38,"column":33,"nodeType":"56","messageId":"57","endLine":38,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":43,"column":41,"nodeType":"56","messageId":"57","endLine":43,"endColumn":43},{"ruleId":"45","severity":1,"message":"53","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"45","severity":1,"message":"53","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":40,"column":37,"nodeType":"60","messageId":"52","endLine":40,"endColumn":42},{"ruleId":"49","severity":1,"message":"50","line":60,"column":36,"nodeType":"51","messageId":"52","endLine":60,"endColumn":38},{"ruleId":"45","severity":1,"message":"61","line":124,"column":7,"nodeType":"47","messageId":"48","endLine":124,"endColumn":15},{"ruleId":"45","severity":1,"message":"53","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},"no-unused-vars","'StyledDiv' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PropTypes' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'field'.","ObjectExpression","'btnStyle' is assigned a value but never used."]